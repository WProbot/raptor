#!/bin/bash

################################################################################

### Set bash environment error management

set -e
set -u

### Source local functions file

echo
source_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [[ "$source_dir" == */tools ]]
then
        source_dir="${source_dir%/tools}"
fi

. "$source_dir/functions"

### Source openspace functions file

source_os_functions

### Define formatting

os-define_formatting

### Define variables

define_vars

################################################################################

check_root

### Get arguments to pass onto the installer

while getopts ":be" arguments; do
    case $arguments in
        b)	export bleeding_edge_bf="-b"
        echo "Using bleeding-edge bash-functions as per | -b |."
        echo
        ;;
        e)	export bleeding_edge_rc="-e"
        echo "Using bleeding-edge repo code as per | -e |."
        echo
        ;;
        \?)	echo "Invalid option | -$OPTARG | for function | ${FUNCNAME[0]} |."
        echo
        exit
        ;;
    esac
done

OPTIND=1

################################################################################

### Clone and upgrade

cd

if [ -d "./${proj_name}/" ]
then
        rm -r "${proj_name}/"
fi

git clone https://github.com/${author_name}/${proj_name}
bash ${proj_name}/setup ${bleeding_edge_bf-} ${bleeding_edge_rc-}
