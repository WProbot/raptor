#!/usr/bin/env bash

### ############################################################################

### initialize script with standard synthia bootstrapping block.

### ############################################################################

#### 1 | add padding to output / clear screen.

clear

#### 2 | locate execution environment and perform synthia-bound operations.

#### ###########################################################################

##### set bash environment error management.

set -eu

##### determine script execution directory and install directory.

if [ -L "${BASH_SOURCE}" ]
then

    ###### this file is being executed via a symlink.
    ###### therefore identify the parent directory of the target file.

    link_target="$(readlink ${BASH_SOURCE})"
    exec_dir="${link_target%/*}"

else

    ###### this file is being directly executed.
    ###### therefore identify our parent directory.

    exec_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

fi

exec_dir_trim_2="$( echo ${exec_dir} | cut -f 1,2,3 -d'/')"
exec_dir_trim_3="$( echo ${exec_dir} | cut -f 1,2,3,4 -d'/')"

if [ -f "${exec_dir_trim_2}/functions" ]
then
	exec_dir_root="${exec_dir_trim_2}"
else
	if [ -f "${exec_dir_trim_3}/functions" ]
	then
		exec_dir_root="${exec_dir_trim_3}"
	else
		echo "Functions file not found in any second or third level parent directory of: | ${exec_dir} |."
		echo
		echo "Exiting..."
		echo
        exit 1
	fi
fi

##### source local functions file.

. "$exec_dir_root/functions"

##### define formatting.

synthia-define_formatting

##### check for root user runtime.

synthia-check_root

#### ###########################################################################

#### 3 | source dna and perform dna-bound operations.

#### ###########################################################################

##### source dna.

synthia-source_dna

##### define variables.

synthia-define_vars

##### read conf settings.

dna-read_conf_settings

##### touch temp dir.

dna-touch_tmp_project_dir

#### ###########################################################################

#### 4 | head shell.

if [[ $- == *i* ]]
then
        dna-echo -m "${g-}You are now inside of the ${project_name}-env shell."
        export PS1="\u@${project_name}-env:\[\e[32m\]~#\[\e[m\] "
else
        dna-echo -e "This file is NOT intended to be run directly."
        dna-echo -m "It is only intended to be sourced by the command:"
        dna-echo -m " | ${y-}bash --init-file ${exec_dir}/${project_name}-env${n-} |"
        dna-echo -m "to enter the developement environment of this project."
        dna-exit
fi

#### ###########################################################################

### ############################################################################
